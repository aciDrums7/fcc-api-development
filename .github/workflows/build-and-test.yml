#1 Continuous Integration
name: Build and Test fCC FastAPI Project
on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment:
      name: TEST
    env:
      DB_USERNAME: ${{  secrets.DB_USERNAME  }}
      DB_PASSWORD: ${{  secrets.DB_PASSWORD  }}
      DB_HOSTNAME: ${{  secrets.DB_HOSTNAME  }}
      DB_PORT: ${{  secrets.DB_PORT  }}
      DB_NAME: ${{  secrets.DB_NAME  }}
      DB_TEST_NAME: ${{  secrets.DB_TEST_NAME  }}
      SECRET_KEY: ${{  secrets.SECRET_KEY  }}
      ALGORITHM: ${{  secrets.ALGORITHM  }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{  secrets.ACCESS_TOKEN_EXPIRE_MINUTES  }}

    services:
      # Label used to access the service container
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{  secrets.DB_PASSWORD  }}
          POSTGRES_DB: ${{  secrets.DB_TEST_NAME  }}
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4

      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: Install Python 3.11.4
        uses: actions/setup-python@v4.7.0
        with:
          python-version: '3.11.4'

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Installing all dependencies
        run: pip install -r requirements.txt

      - name: Test with pytest
        run: |
          pip install pytest
          pytest -v

      - run: echo "🍏 This job's status is ${{ job.status }}."
